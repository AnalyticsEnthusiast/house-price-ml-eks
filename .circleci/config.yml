version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
    lint:
      docker:
          - image: python:3.7.3-stretch
      working_directory: ~/repo
      steps:
        - checkout
        - restore_cache:
            keys:
                - v1-dependencies-{{ checksum "requirements.txt" }}
                - v1-dependencies-
        - run:
            name: install dependencies
            command: |
                python3 -m venv venv
                . venv/bin/activate
                make install
                # Install hadolint
                wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint
        - save_cache:
            paths:
                - ./venv
            key: v1-dependencies-{{ checksum "requirements.txt" }}
        - run:
            name: run lint
            command: |
                . venv/bin/activate
                make lint 

    test:
      docker:
            - image: python:3.7.3-stretch
      working_directory: ~/repo
      steps:
        - checkout
        - restore_cache:
            keys:
                - v1-dependencies-{{ checksum "requirements.txt" }}
                - v1-dependencies-
        - run:
            name: Start Flask application and run test
            command: |
                python3 -m venv venv
                . venv/bin/activate
                make install
                python3 app.py &
                sleep 5 # Wait for server to start
                ./make_prediction.sh 80
                RC=$(echo $?)
                if [ "${RC}" != "0" ];
                then
                    exit 1
                fi
        - save_cache:
            paths:
                - ./venv
            key: v1-dependencies-{{ checksum "requirements.txt" }}
                  

    build:
      docker:
            - image: circleci/buildpack-deps:stretch
      steps:
        - checkout
        - setup_remote_docker
        - run:
            name: Build Docker image with latest tag
            command: |
              docker build -t ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest .
        - run:
            name: Archive Docker image
            command: docker save -o image.tar ${DOCKERHUB_USERNAME}/${IMAGE_NAME}
        - persist_to_workspace:
            root: .
            paths:
              - ./image.tar
  
    push:
      docker:
            - image: circleci/buildpack-deps:stretch
      steps:
        - attach_workspace:
            at: /tmp/workspace
        - setup_remote_docker
        - run:
            name: Load archived Docker image
            command: docker load -i /tmp/workspace/image.tar
        - run: 
            name: Push to dockerhub
            command: |
              echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
              docker push ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest

    create_deployment:
        docker:
          - image: cimg/python:3.10.6
        steps:
          - checkout
          - run:
              name: Set up .aws directory
              command: |
                mkdir ~/.aws
                echo -e "[UdacityAdmin]\naws_access_key_id=${AWS_ACCESS_KEY_ID}\naws_secret_access_key=${AWS_SECRET_ACCESS_KEY}\n" > ~/.aws/credentials
          - aws-eks/update-kubeconfig-with-authenticator:
                  cluster-name: ${CLUSTER_NAME}
                  install-kubectl: true
                  aws-region: ${AWS_DEFAULT_REGION}
                  aws-profile: UdacityAdmin
          - run:
              name: Test
              command: |
                cat ~/.kube/config
          - kubernetes/create-or-update-resource:
                  action-type: apply
                  envsubst: true
                  get-rollout-status: true
                  namespace: ${KUBE_NAMESPACE}
                  resource-file-path: ml-deployment.yml
                  resource-name: deployment/house-pred-deployment-${CIRCLE_WORKFLOW_ID:0:8}

    create_service:
        docker:
          - image: cimg/python:3.10.6
        steps:
          - checkout
          - run:
              name: Set up .aws directory
              command: |
                mkdir ~/.aws
                echo -e "[UdacityAdmin]\naws_access_key_id=${AWS_ACCESS_KEY_ID}\naws_secret_access_key=${AWS_SECRET_ACCESS_KEY}\n" > ~/.aws/credentials
          - aws-eks/update-kubeconfig-with-authenticator:
                  cluster-name: ${CLUSTER_NAME}
                  install-kubectl: true
                  aws-region: ${AWS_DEFAULT_REGION}
                  aws-profile: UdacityAdmin
          - kubernetes/create-or-update-resource:
                  action-type: apply
                  envsubst: true
                  get-rollout-status: true
                  namespace: ${KUBE_NAMESPACE}
                  resource-file-path: ml-service.yml
                  resource-name: service/house-pred-api-service-${CIRCLE_WORKFLOW_ID:0:8} 

workflows:
      version: 2
      main_workflow:
            jobs:
              - create_deployment

              #- create_service:
              #      requires:
              #          - create_deployment
              #- lint 
              #- test
              #- build:
              #    requires:
              #      - lint
              #      - test
              #- push:
              #    requires:
              #      - build
              #    filters:
              #      branches:
              #        only: master
              #- create_deployment:
              #      requires:
              #        - push
              #- create_service:
              #      requires:
              #        - create_deployment
